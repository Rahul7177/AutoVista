{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Desktop\\\\Project\\\\frontend\\\\src\\\\components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport logo from '../assets/logo.png';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Check if the user is logged in (you might have your own logic here)\n    const userIsLoggedIn = /* Your logic to check if the user is logged in */true;\n    setIsLoggedIn(userIsLoggedIn);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav-container\",\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-link-dropdown account\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"dropbtn user-i\",\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-content\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/profile\",\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"My Listings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/logout\",\n              children: \"Log Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Log In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","logo","Link","jsxDEV","_jsxDEV","Navbar","_s","isLoggedIn","setIsLoggedIn","userIsLoggedIn","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/rahul/Desktop/Project/frontend/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport logo from '../assets/logo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if the user is logged in (you might have your own logic here)\r\n    const userIsLoggedIn = /* Your logic to check if the user is logged in */ true;\r\n    setIsLoggedIn(userIsLoggedIn);\r\n  }, []);\r\n\r\n  return (\r\n    <div className='nav-container'>\r\n      <nav className=\"navbar\">\r\n        {/* ... other navigation links */}\r\n        \r\n        <div className='nav-right'>\r\n          {/* ... other elements */}\r\n          \r\n          <div className=\"navbar-link-dropdown account\">\r\n            <a className=\"dropbtn user-i\" href='/'>\r\n              <i className=\"fas fa-user\"></i>\r\n            </a>\r\n            <div className=\"dropdown-content\">\r\n              <Link to='/profile'>Profile</Link>\r\n              <Link to='/'>My Listings</Link>\r\n              {isLoggedIn ? (\r\n                <Link to='/logout'>Log Out</Link>\r\n              ) : (\r\n                <Link to='/login'>Log In</Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,cAAc,GAAG,kDAAmD,IAAI;IAC9ED,aAAa,CAACC,cAAc,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKM,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BP,OAAA;MAAKM,SAAS,EAAC,QAAQ;MAAAC,QAAA,eAGrBP,OAAA;QAAKM,SAAS,EAAC,WAAW;QAAAC,QAAA,eAGxBP,OAAA;UAAKM,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBAC3CP,OAAA;YAAGM,SAAS,EAAC,gBAAgB;YAACE,IAAI,EAAC,GAAG;YAAAD,QAAA,eACpCP,OAAA;cAAGM,SAAS,EAAC;YAAa;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eACJZ,OAAA;YAAKM,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BP,OAAA,CAACF,IAAI;cAACe,EAAE,EAAC,UAAU;cAAAN,QAAA,EAAC;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClCZ,OAAA,CAACF,IAAI;cAACe,EAAE,EAAC,GAAG;cAAAN,QAAA,EAAC;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAC9BT,UAAU,gBACTH,OAAA,CAACF,IAAI;cAACe,EAAE,EAAC,SAAS;cAAAN,QAAA,EAAC;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,gBAEjCZ,OAAA,CAACF,IAAI;cAACe,EAAE,EAAC,QAAQ;cAAAN,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAC/B;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACV,EAAA,CAnCID,MAAM;AAAAa,EAAA,GAANb,MAAM;AAqCZ,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}